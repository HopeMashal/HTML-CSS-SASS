//! Import & Use
// Import Global Rules
@use "./layout/global_rules";

// Import Pages
@use "./pages/contact";

// Import Variables
@use "./variables/color" as *;
//OR use "./variables/color";

// Import Mixins
@use "./helpers/mixins" as *;

//Import Functions
@use "./helpers/functions" as *;

//! Variables
// Global Variable
$alt_color: green;

.header {
  color: $alt_color;
}

.footer {
  // Local Variable --> !global change Global Variable
  $alt_color: black !global;
  background-color: $alt_color;
}

.copyright {
  background-color: $alt_color;
}

.sidebar {
  background-color: $main; //color.$main
  color: $alt; //color.$alt
}

$max_mobile: "max-width: 767px";

@media ($max_mobile) {
  .sidebar {
    padding: 20px;
  }
}

//! Nesting & Parent Element
.parent {
  font-weight: bold;
  .child {
    font-size: 20px;
    .grand-child {
      font-size: 15px;
    }
  }
  .next-child {
    font-size: 17px;
  }
}

.parent-one,
.parent-two {
  padding: 20px;
  .child {
    padding: 10px;
  }
}

.parent > {
  .child {
    font-size: 22px;
  }
  .test {
    font-weight: bolder;
  }
}

.parent {
  > .child {
    font-size: 20px;
  }
  .test {
    font-weight: bold;
  }
  + p {
    font-size: 15px;
  }
}

.parent {
  > {
    .element-one {
      font-size: 10px;
    }
    .element-two {
      font-size: 20px;
    }
  }
  .not-direct-child {
    font-weight: bold;
  }
}

.box {
  .title {
    font-size: 12px;
  }
  .description {
    font-size: 15px;
  }
  &.red {
    color: red;
  }
  &.green {
    color: green;
  }
  &:hover {
    background-color: #eee;
    .title {
      font-weight: bold;
    }
  }
  :not(&) {
    font-weight: normal;
  }
  [dir="rtl"] & {
    direction: rtl;
  }
}

//! Property Declarations and Placeholder

.box {
  font-size: 20px;
  font: {
    size: 15px;
    weight: bold;
  }
  padding: 10px;
  margin: auto {
    top: 10px;
    bottom: 15px;
  }
}

%main-box {
  //Source
  background-color: white;
  padding: 15px;
  border: 1px solid #ccc;
}

.ads {
  @extend %main-box;
  font-size: 20px;
  color: red;
}

.article {
  @extend %main-box;
  font-size: 22px;
  color: green;
}

//! Control Flow - If and Else

$theme: "light";

.page {
  @if $theme == "light" {
    background-color: white;
    color: #444;
  } @else {
    background-color: #444;
    color: white;
  }
}

$rounded: false;

.box {
  @extend %main-box;
  border-radius: if($rounded, 6px, null); // if statement, true , false
}

//! Create Triangle with if & Else

$direction: "top";
.arrow-div {
  @extend %main-box;
  font-size: 20px;
  display: flex;
  justify-content: center;
  align-items: center;
  width: 300px;
  height: 300px;
  position: relative;
  margin: 50px auto;
  &::before {
    content: "";
    position: absolute;
    border: 20px solid transparent;
    @if $direction == "top" {
      top: -40px;
      left: 50%;
      transform: translateX(-50%);
      border-bottom-color: red;
    } @else if $direction == "right" {
      right: -40px;
      top: 50%;
      transform: translateY(-50%);
      border-left-color: red;
    } @else if $direction == "bottom" {
      bottom: -40px;
      left: 50%;
      transform: translateX(-50%);
      border-top-color: red;
    } @else if $direction == "left" {
      left: -40px;
      top: 50%;
      transform: translateY(-50%);
      border-right-color: red;
    } @else {
      @error 'This direction #{$direction} in NOT valid';
    }
  }
}

//! Interpolation

$company: "Hope";
$position: "left";

.add-#{$company}-#{unique-id()} {
  font-size: 20px;
  background-image: url("images/#{$company}.png");
  #{$position}: 0;
}

.ad-#{unique-id()} {
  font-weight: bold;
}

//! Comments & Documenting

// This Comment will not show in css file

/* This comment will show in css file but not in Compressed mode */

/*! This comment will show in css file and in Compressed mode */

.box /* Multiple
Lines
Comments */ {
  font-size: 20px;
}

/* This Comment Contains Interpolation => #{$company} */

/// Function to do Bla Bla Bla
///
/// @param {num}
/// The Number to Deal with
/// @return {int}

//! Mixin & Include

ul.links {
  @include list-reset;
}

.circle-100 {
  @include circle(100px);
  background-color: red;
  color: white;
}

.circle-200 {
  @include circle(200px);
  background-color: red;
  color: white;
}

.center-circle {
  @include circle(400px);
  @include centering;
}

//! For Loop

@for $i from 1 through 10 {
  // to --> without 10, through --> with 10
  .class-#{$i} {
    font-size: #{$i + 10px};
  }
}

$dimensions: 0;
@for $i from 1 to 11 {
  .circle-#{100 + $dimensions} {
    width: $dimensions + 100px;
    height: $dimensions + 100px;
    border-radius: 50%;
  }
  $dimensions: $dimensions + 100;
}

//! Each & Maps

$themes: red, green, blue, orange;

@each $theme in $themes {
  .#{$theme}-theme {
    .product {
      background-color: white;
      border-bottom: 2px solid $theme;
      .title {
        color: $theme;
        font-weight: bold;
      }
    }
  }
}

$socials: (
  "facebook": blue,
  "youtube": red,
  "github": black,
);

@each $name, $color in $socials {
  .#{$name} {
    background-color: $color;
    color: white;
    &::before {
      content: $name;
    }
  }
}

$classes: "one" 20px red, "two" 15px green, "three" 22px blue;

@each $class, $font, $color in $classes {
  .#{$class} {
    font-size: $font;
    background-color: $color;
    color: white;
    padding: $font / 2;
  }
}

//! While Loop

$start: 1;

@while $start <= 10 {
  .width-#{$start * 100} {
    width: $start * 100px;
    height: ($start * 100px)/2;
  }
  $start: $start + 1;
}

//! Create Bootstrap Grid System

$grid-cols: 12;

@for $i from 1 through $grid-cols {
  .col-#{$i} {
    width: percentage($i/$grid-cols);
  }
}

//! Functions

$width: 200px;

.element {
  width: $width;
  height: half($width);
  top: calculate(100px, 200px, 50px);
}

//! Mixin with Content

.black-overlay {
  @include overlay(black, 0.5);
}

@include keyF(fade-in) {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}
@include keyF(go-up) {
  from {
    bottom: 0;
  }
  to {
    bottom: 100px;
  }
} ;

//! Create Media Queries Mixin

.media{
  @include breakpoint(mobile){
    font-size: 15px;
  }
  @include breakpoint(small){
    font-size: 18px;
  }
  @include breakpoint(medium){
    font-size: 20px;
  }
  @include breakpoint(large){
    font-size: 22px;
  }
}